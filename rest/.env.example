# Server and Admin server settings
PGRST_ADMIN_SERVER_HOST=
PGRST_ADMIN_SERVER_PORT=
PGRST_SERVER_HOST=::
PGRST_SERVER_PORT=3000
PGRST_SERVER_CORS_ALLOWED_ORIGINS=
PGRST_SERVER_TRACE_HEADER=
PGRST_SERVER_TIMING_ENABLED=false
PGRST_SERVER_UNIX_SOCKET=
PGRST_SERVER_UNIX_SOCKET_MODE=

# Read more about passing arbitrary settings to Postgres, accessed via `current_setting()`: https://docs.postgrest.org/en/v13/references/configuration.html#app-settings
PGRST_APP_SETTINGS_ARBITRARY_VARIABLE=

# Read more about risks of enabling aggregate functions in PostgREST: https://docs.postgrest.org/en/v13/references/api/aggregate_functions.html#aggregate-functions
PGRST_DB_AGGREGATES_ENABLED=false

# The database role to use when executing commands on behalf of unauthenticated clients. See overview of role system: https://docs.postgrest.org/en/v13/references/auth.html#roles
PGRST_DB_ANON_ROLE=

# The name of the notification channel that PostgREST uses for Schema Cache Reloading with NOTIFY and Configuration Reload with NOTIFY.
PGRST_DB_CHANNEL=pgrst
PGRST_DB_CHANNEL_ENABLED=true

# Enables the in-database configuration. Read more: https://docs.postgrest.org/en/v13/references/configuration.html#in-db-config
PGRST_DB_CONFIG=true
PGRST_DB_PRE_CONFIG=postgrest.pre_config_function

# This parameter was meant to make it easier to use PostgreSQL extensions (like PostGIS) that are outside of the db-schemas.
PGRST_DB_EXTRA_SEARCH_PATH=

# Hoisted settings are allowed to be applied as transaction-scoped function settings.
PGRST_DB_HOISTED_TX_SETTINGS=

# When this is set to true, the execution plan of a request can be retrieved by using the "Accept: application/vnd.pgrst.plan" header.
PGRST_DB_PLAN_ENABLED=

# Internal database pool settings
PGRST_DB_POOL=10
PGRST_DB_POOL_ACQUISITION_TIMEOUT=10
PGRST_DB_POOL_MAX_IDLETIME=30
PGRST_DB_POOL_MAX_LIFETIME=1800
PGRST_DB_POOL_AUTOMATIC_RECOVERY=true

# A schema-qualified function name to call right after the Transaction-Scoped settings are set. Read more: https://docs.postgrest.org/en/v13/references/transactions.html#pre-request
PGRST_DB_PRE_REQUEST=

# Enable prepared statements. You should only set this to false when using PostgresSQL behind an external connection pooler such as PgBouncer working in transaction pooling mode.
PGRST_DB_PREPARED_STATEMENTS=true

# Function to override the OpenAPI response. Read more: https://docs.postgrest.org/en/v13/references/api/openapi.html#override-openapi
PGRST_DB_ROOT_SPEC=

# The list of database schemas to expose to clients. Read more: https://docs.postgrest.org/en/v13/references/api/schemas.html#schemas
PGRST_DB_SCHEMAS=

# Specifies how to terminate the database transactions.
# Options are:
# commit
# commit-allow-override
# rollback
# rollback-allow-override
PGRST_DB_TX_END=

# Connection string
PGRST_DB_URI=postgresql://user:password@host:5432/db_name

# JWT settings
PGRST_JWT_AUD=
PGRST_JWT_ROLE_CLAIM_KEY=
PGRST_JWT_SECRET=
PGRST_JWT_SECRET_IS_BASE64=false
PGRST_JWT_CACHE_MAX_LIFETIME=0

# Log level
PGRST_LOG_LEVEL=info
# Log the actual SQL query that was executed along with every request. It will output at the level of the LOG_LEVEL var. Options are "disabled" and "main-query"
PGRST_LOG_QUERY=main-query

# OpenAPI settings
PGRST_OPENAPI_MODE=follow-privileges
PGRST_OPENAPI_SECURITY_ACTIVE=false
PGRST_OPENAPI_SERVER_PROXY_URI=
